<!DOCTYPE html>
<html lang="{{ language }}">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400..700;1,400..700&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Open+Sans:ital,wght@0,300..800;1,300..800&family=Playfair+Display:ital,wght@0,400..900;1,400..900&family=Rubik:ital,wght@0,300..900;1,300..900&display=swap" rel="stylesheet">
        <link rel="stylesheet" href="/css/style.css">
        <title>{{ title }}</title>
        <script src="https://identity.netlify.com/v1/netlify-identity-widget.js"></script>
    </head>
    
    <body>

        {{ content | safe }}

        <script>
            if (window.netlifyIdentity) {
              window.netlifyIdentity.on("init", (user) => {
                if (!user) {
                  window.netlifyIdentity.on("login", () => {
                    document.location.href = "/admin/";
                  });
                }
              });
            }
          </script>

          <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.min.js"></script>
          <script>
            const url = "/pdfs/kvarteto-kniha.pdf";

            let pdfDoc = null;
            let currentPage = 1;
            let totalPages = 0;

            const canvas = document.getElementById("pdf-canvas");
            const ctx = canvas.getContext("2d");
            const pageInfo = document.getElementById("page-info");

            const renderPage = (num) => {
              pdfDoc.getPage(num).then(page => {
                const viewport = page.getViewport({ scale: 2.0 });
                canvas.height = viewport.height;
                canvas.width = viewport.width;

                const renderContext = {
                  canvasContext: ctx,
                  viewport: viewport
                };
                page.render(renderContext);

                pageInfo.textContent = `${num} / ${pdfDoc.numPages}`;
              });
            };

            pdfjsLib.getDocument(url).promise.then(pdf => {
              pdfDoc = pdf;
              totalPages = pdf.numPages;
              renderPage(currentPage);
            });

            document.getElementById("prev-page").addEventListener("click", () => {
              if (currentPage <= 1) return;
              currentPage--;
              renderPage(currentPage);
            });

            document.getElementById("next-page").addEventListener("click", () => {
              if (currentPage >= totalPages) return;
              currentPage++;
              renderPage(currentPage);
            });
          </script>

    </body>

</html>